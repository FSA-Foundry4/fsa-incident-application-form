name: push to live triggers deploy to prd

on:
  push:
    branches: [ live ]

env:
  # From
  registry_from: ${{ secrets.DEV_CONTAINER_REGISTRY_NAME }}
  registry_from_username: ${{ secrets.DEV_CONTAINER_REGISTRY_USERNAME }}
  registry_from_password: ${{ secrets.DEV_CONTAINER_REGISTRY_PASSWORD }}
  tag_from: latest
  # To
  registry_to: ${{ secrets.PROD_CONTAINER_REGISTRY_NAME }}
  registry_to_username: ${{ secrets.PROD_CONTAINER_REGISTRY_USERNAME }}
  registry_to_password: ${{ secrets.PROD_CONTAINER_REGISTRY_PASSWORD }}
  tag_to: prd

jobs:

  prd-rg:
    name: Creating Prod app-service plan and container registry
    runs-on: ubuntu-latest
    steps:
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.PROD_AZURE_CREDENTIALS }}

    - name: Default location + resource group
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az configure --defaults location=uksouth
          az configure --defaults group=RG-APP-FSA-PRD-IncidentReportForm-1

    - name: Create App Service plan
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az appservice plan create --name prd --is-linux --sku p1v2

    - name: Create Container registry
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          # Admin needs to be enabled for App Service continuous deployment
          az acr create --name ${{ secrets.PROD_CONTAINER_REGISTRY_NAME }} --sku Standard --admin-enabled true

  form-ui-appservice:
    name: Creating and configuring Web Application
    needs: [prd-rg]
    runs-on: ubuntu-latest
    steps:
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.PROD_AZURE_CREDENTIALS }}

    - name: Default location + resource group
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az configure --defaults location=uksouth
          az configure --defaults group=RG-APP-FSA-PRD-IncidentReportForm-1

    - name: Create web application
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp create --name fsa-incident-report-form-prd \
            --plan prd \
            --deployment-container-image-name ${{ secrets.PROD_CONTAINER_REGISTRY_NAME }}.azurecr.io/form-ui

    - name: Switch on Continuous deployment
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp deployment container config --name fsa-incident-report-form-prd \
            --enable-cd true

    - name: Enable container logging
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp log config --name fsa-incident-report-form-prd \
            --docker-container-logging filesystem

    - name: Always-on
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp config set --name fsa-incident-report-form-prd \
            --always-on true

    - name: Applying Environment variables
      uses: Azure/cli@v1.0.0
      with:
        # NB we're setting PORT for the container and WEBSITES_PORT for Azure.
        inlineScript: |
          az webapp config appsettings set --name fsa-incident-report-form-prd \
            --settings \
              PORT=3000 \
              WEBSITES_PORT=3000 \
              LOOKUP_API_BASE_URL=http://localhost:3000 \
              SESSION_KEY=${{ secrets.PROD_SESSION_KEY }} \
              GOV_NOTIFY_API_KEY=${{ secrets.PROD_GOV_NOTIFY_API_KEY }} \
              NOTIFICATION_EMAIL=${{ secrets.PROD_NOTIFICATION_EMAIL }}

  deploy:
    name: Promote incident report form to production
    needs: [form-ui-appservice]
    runs-on: ubuntu-latest
    steps:

    - uses: azure/login@v1
      with:
        creds: ${{ secrets.PROD_AZURE_CREDENTIALS }}

    - name: Defaults
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az configure --defaults location=uksouth
          az configure --defaults group=RG-APP-FSA-PRD-IncidentReportForm-1

    - name: Log in to source container registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.registry_from }}.azurecr.io
        username: ${{ env.registry_from_username }}
        password: ${{ env.registry_from_password }}

    - name: Log in to destination container registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.registry_to }}.azurecr.io
        username: ${{ env.registry_to_username }}
        password: ${{ env.registry_to_password }}

    - name: Promote container image
      run: |
        docker pull ${{ env.registry_from }}.azurecr.io/form-ui:${{ env.tag_from }}
        docker tag ${{ env.registry_from }}.azurecr.io/form-ui:${{ env.tag_from }} ${{ env.registry_to }}.azurecr.io/form-ui:${{ env.tag_to }}
        docker push ${{ env.registry_to }}.azurecr.io/form-ui:${{ env.tag_to }}

    - name: Create slot ${{ github.sha }}
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp deployment slot create --name fsa-incident-report-form-prd --slot ${{ github.sha }} --configuration-source fsa-incident-report-form-prd

    - name: Swap slot ${{ github.sha }} into production
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp deployment slot swap   --name fsa-incident-report-form-prd --slot ${{ github.sha }} --action swap

    - name: Delete slot ${{ github.sha }}
      # Clean up the slot regardless of errors
      if: ${{ always() }}
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp deployment slot delete --name fsa-incident-report-form-prd --slot ${{ github.sha }}
