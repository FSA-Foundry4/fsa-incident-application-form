name: deploy to azure

on:
  push:
    branches: [ main ]

jobs:

  dev-rg:
    name: Creating Dev app-service plan and container registry
    runs-on: ubuntu-latest
    steps:
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.DEV_AZURE_CREDENTIALS }}

    - name: Defaults
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az configure --defaults location=uksouth
          az configure --defaults group=fsa-incident-report-form

    - name: App Service plan
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az appservice plan create --name dev --is-linux --sku p1v2

    - name: Container registry
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          # Admin needs to be enabled for App Service continuous deployment
          az acr create --name ${{ secrets.CONTAINER_REGISTRY_NAME }} --sku Standard --admin-enabled true

  form-ui-appservice:
    name: Form UI
    needs: [dev-rg]
    runs-on: ubuntu-latest
    steps:
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.DEV_AZURE_CREDENTIALS }}

    - name: Defaults
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az configure --defaults location=uksouth
          az configure --defaults group=fsa-incident-report-form

    - name: Create
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp create --name fsa-dev-incident-report-form \
            --plan dev \
            --deployment-container-image-name ${{ secrets.CONTAINER_REGISTRY_NAME }}.azurecr.io/form-ui

    - name: Continuous deployment
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp deployment container config --name fsa-dev-incident-report-form \
            --enable-cd true

    - name: Enable container logging
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp log config --name fsa-dev-incident-report-form \
            --docker-container-logging filesystem

    - name: Always-on
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp config set --name fsa-dev-incident-report-form \
            --always-on true

    - name: Environment variables
      uses: Azure/cli@v1.0.0
      with:
        # NB we're setting PORT for the container and WEBSITES_PORT for Azure.
        inlineScript: |
          az webapp config appsettings set --name fsa-dev-incident-report-form \
            --settings \
              PORT=3000 \
              WEBSITES_PORT=3000

    - name: Secrets
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp config connection-string set --name fsa-dev-incident-report-form \
            --connection-string-type custom \
            --settings \
              SESSION_SECRET="sshhhhh"

  build:
    name: Build and push Form UI
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build and push
      uses: docker/build-push-action@v1
      with:
        registry: ${{ secrets.CONTAINER_REGISTRY_NAME }}.azurecr.io
        username: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
        password: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}
        repository: form-ui
        path: incident-application-form
        tags: latest
        build_args: GITHUB_SHA=${{ github.sha }}
        add_git_labels: true

  deploy:
    name: Deploy container images to Dev
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.DEV_AZURE_CREDENTIALS }}

    - name: Defaults
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az configure --defaults location=uksouth
          az configure --defaults group=fsa-incident-report-form

    - name: Create slot ${{ github.sha }}
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp deployment slot create --name fsa-dev-incident-report-form --slot ${{ github.sha }} --configuration-source fsa-dev-incident-report-form

    - name: Swap slot ${{ github.sha }} into production
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp deployment slot swap   --name fsa-dev-incident-report-form --slot ${{ github.sha }} --action swap

    - name: Delete slot ${{ github.sha }}
      # Clean up the slot regardless of errors
      if: ${{ always() }}
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp deployment slot delete --name fsa-dev-incident-report-form --slot ${{ github.sha }}
